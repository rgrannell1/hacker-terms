
"use strict"





var analyseData       = require('hacker-terms/stats/analyse-data')
var findTermFrequency = require('hacker-terms/stats/find-term-frequency')





var addTimeLabel = (units, freq) => {

	var date = new Date(1000 * freq.datum.time)

	if (units.year) {
		freq.datum.timeLabel = new Date(date).getFullYear( )
	}

	if (units.month) {
		freq.datum.timeLabel = new Date(date).getMonth( )
	}

	return freq

}





var groupDataByTime = (acc, freq) => {

	if (acc.length === 0 || acc[acc.length - 1].timeLabel !== freq.datum.timeLabel) {

		return acc.concat({
			termScores:   freq.terms,
			timeLabel:    freq.datum.timeLabel,
			observations: 0
		})

	}

	var end = acc[acc.length - 1]
	++end.observations

	if (end.timeLabel === freq.datum.timeLabel) {

		Object.keys(freq.terms).forEach(term => {
			end.termScores[term] += freq.terms[term]
		})

		return acc

	}

}




var averageUsages = group => {

	var termAverages = { }

	Object.keys(group.termScores).forEach(key => {
		termAverages[key] = (group.termScores[key] / group.observations) || 0
	})

	return {
		termAverages,
		timeLabel:    group.timeLabel,
		observations: group.observations
	}

}





var averageUsageInRange = (args, freqs) => {

	return freqs
		.map(
			addTimeLabel.bind({ }, {year: args.year, month: args.month}) )
		.reduce(
			groupDataByTime, [ ])
		.map(
			averageUsages)

}




module.exports = averageUsageInRange
